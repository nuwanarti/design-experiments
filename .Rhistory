prefsAB = read.csv("prefsAB.csv")
View(prefsAB)
prefsAB$Subject = factor(prefsAB$Subject) # convert to nominal factor
prefsAB$Pref = factor(prefsAB$Pref) # Rv4
summary(prefsAB)
plot(prefsAB$Pref)
View(prefsAB)
# Pearson chi-square test
prfs = xtabs( ~ Pref, data=prefsAB)
# Pearson chi-square test
prfs = xtabs( ~ Pref, data=prefsAB)
prfs # show counts
chisq.test(prfs)
# binomial test
binom.test(prfs)
# read in a data file with 3 response categories
prefsABC = read.csv("prefsABC.csv")
View(prefsABC)
prefsABC$Subject = factor(prefsABC$Subject) # convert to nominal factor
prefsABC$Pref = factor(prefsABC$Pref) # Rv4
summary(prefsABC)
plot(prefsABC$Pref)
# Pearson chi-square test
prfs = xtabs( ~ Pref, data=prefsABC)
prfs # show counts
chisq.test(prfs)
# you can get the documentation of a function with ?nameofthefunction
xmulti(prfs, c(1/3, 1/3, 1/3), statName="Prob")
# we did the chi sq test. its an asymptotic test. so we have to do an exact
# test
# multinomial test
library(XNomial)
# you can get the documentation of a function with ?nameofthefunction
xmulti(prfs, c(1/3, 1/3, 1/3), statName="Prob")
# we do this to adjust the p values, to correct the results getting by chance.
# bonferoni adjustment.
p.adjust(c(aa$p.value, bb$p.value, cc$p.value), method="holm")
# revisit our data file with 2 response categories, but now with sex (M/F)
prefsABsex = read.csv("prefsABsex.csv")
View(prefsABsex)
prefsABsex$Subject = factor(prefsABsex$Subject) # convert to nominal factor
prefsABsex$Pref = factor(prefsABsex$Pref) # Rv4
prefsABsex$Sex = factor(prefsABsex$Sex) # Rv4
summary(prefsABsex)
plot(prefsABsex[prefsABsex$Sex == "M",]$Pref)
plot(prefsABsex[prefsABsex$Sex == "F",]$Pref)
# Pearson chi-square test
prfs = xtabs( ~ Pref + Sex, data=prefsABsex) # the '+' sign indicates two vars
View(prfs)
chisq.test(prfs)
# G-test, asymptotic like chi-square
library(RVAideMemoire)
G.test(prfs)
# Fisher's exact test
fisher.test(prfs)
# revisit our data file with 3 response categories, but now with sex (M/F)
prefsABCsex = read.csv("prefsABCsex.csv")
View(prefsABCsex)
prefsABCsex$Subject = factor(prefsABCsex$Subject) # convert to nominal factor
prefsABCsex$Pref = factor(prefsABCsex$Pref) # Rv4
prefsABCsex$Sex = factor(prefsABCsex$Sex) # Rv4
summary(prefsABCsex)
plot(prefsABCsex[prefsABCsex$Sex == "M",]$Pref)
plot(prefsABCsex[prefsABCsex$Sex == "F",]$Pref)
# Pearson chi-square test
prfs = xtabs( ~ Pref + Sex, data=prefsABCsex)
View(prfs)
chisq.test(prfs)
# install.packages("RVAideMemoire") # now this should work
# G-test
library(RVAideMemoire)
G.test(prfs)
# Fisher's exact test
fisher.test(prfs)
# install.packages(deps)
# manual post hoc binomial tests for (m)ales -- do any prefs for A-C sig. differ from chance for males?
ma = binom.test(sum(prefsABCsex[prefsABCsex$Sex == "M",]$Pref == "A"), nrow(prefsABCsex[prefsABCsex$Sex == "M",]), p=1/3)
mb = binom.test(sum(prefsABCsex[prefsABCsex$Sex == "M",]$Pref == "B"), nrow(prefsABCsex[prefsABCsex$Sex == "M",]), p=1/3)
mc = binom.test(sum(prefsABCsex[prefsABCsex$Sex == "M",]$Pref == "C"), nrow(prefsABCsex[prefsABCsex$Sex == "M",]), p=1/3)
p.adjust(c(ma$p.value, mb$p.value, mc$p.value), method="holm") # correct for multiple comparisons
# manual post hoc binomial tests for (f)emales -- do any prefs for A-C sig. differ from chance for females?
fa = binom.test(sum(prefsABCsex[prefsABCsex$Sex == "F",]$Pref == "A"), nrow(prefsABCsex[prefsABCsex$Sex == "F",]), p=1/3)
fb = binom.test(sum(prefsABCsex[prefsABCsex$Sex == "F",]$Pref == "B"), nrow(prefsABCsex[prefsABCsex$Sex == "F",]), p=1/3)
fc = binom.test(sum(prefsABCsex[prefsABCsex$Sex == "F",]$Pref == "C"), nrow(prefsABCsex[prefsABCsex$Sex == "F",]), p=1/3)
p.adjust(c(fa$p.value, fb$p.value, fc$p.value), method="holm") # correct for multiple comparisons
# revisit our data file with 3 response categories, but now with sex (M/F)
prefsABCsex = read.csv("prefsABCsex.csv")
View(prefsABCsex)
prefsABCsex$Subject = factor(prefsABCsex$Subject) # convert to nominal factor
prefsABCsex$Pref = factor(prefsABCsex$Pref) # Rv4
prefsABCsex$Sex = factor(prefsABCsex$Sex) # Rv4
summary(prefsABCsex)
plot(prefsABCsex[prefsABCsex$Sex == "M",]$Pref)
plot(prefsABCsex[prefsABCsex$Sex == "F",]$Pref)
# manual post hoc binomial tests for (f)emales -- do any prefs for A-C sig. differ from chance for females?
fa = binom.test(sum(prefsABCsex[prefsABCsex$Sex == "F",]$Pref == "A"), nrow(prefsABCsex[prefsABCsex$Sex == "F",]), p=1/3)
fb = binom.test(sum(prefsABCsex[prefsABCsex$Sex == "F",]$Pref == "B"), nrow(prefsABCsex[prefsABCsex$Sex == "F",]), p=1/3)
fc = binom.test(sum(prefsABCsex[prefsABCsex$Sex == "F",]$Pref == "C"), nrow(prefsABCsex[prefsABCsex$Sex == "F",]), p=1/3)
p.adjust(c(fa$p.value, fb$p.value, fc$p.value), method="holm") # correct for multiple comparisons
# revisit our data file with 3 response categories, but now with sex (M/F)
prefsABCsex = read.csv("prefsABCsex.csv")
prefsABCsex$Subject = factor(prefsABCsex$Subject) # convert to nominal factor
prefsABCsex$Pref = factor(prefsABCsex$Pref) # Rv4
prefsABCsex$Sex = factor(prefsABCsex$Sex) # Rv4
summary(prefsABCsex)
plot(prefsABCsex[prefsABCsex$Sex == "M",]$Pref)
plot(prefsABCsex[prefsABCsex$Sex == "F",]$Pref)
# Pearson chi-square test
prfs = xtabs( ~ Pref + Sex, data=prefsABCsex)
View(prfs)
chisq.test(prfs)
# install.packages("RVAideMemoire") # now this should work
# G-test
library(RVAideMemoire)
G.test(prfs)
# Fisher's exact test
fisher.test(prfs)
# install.packages(deps)
# manual post hoc binomial tests for (m)ales -- do any prefs for A-C sig. differ from chance for males?
ma = binom.test(sum(prefsABCsex[prefsABCsex$Sex == "M",]$Pref == "A"), nrow(prefsABCsex[prefsABCsex$Sex == "M",]), p=1/3)
mb = binom.test(sum(prefsABCsex[prefsABCsex$Sex == "M",]$Pref == "B"), nrow(prefsABCsex[prefsABCsex$Sex == "M",]), p=1/3)
mc = binom.test(sum(prefsABCsex[prefsABCsex$Sex == "M",]$Pref == "C"), nrow(prefsABCsex[prefsABCsex$Sex == "M",]), p=1/3)
p.adjust(c(ma$p.value, mb$p.value, mc$p.value), method="holm") # correct for multiple comparisons
# manual post hoc binomial tests for (f)emales -- do any prefs for A-C sig. differ from chance for females?
fa = binom.test(sum(prefsABCsex[prefsABCsex$Sex == "F",]$Pref == "A"), nrow(prefsABCsex[prefsABCsex$Sex == "F",]), p=1/3)
fb = binom.test(sum(prefsABCsex[prefsABCsex$Sex == "F",]$Pref == "B"), nrow(prefsABCsex[prefsABCsex$Sex == "F",]), p=1/3)
fc = binom.test(sum(prefsABCsex[prefsABCsex$Sex == "F",]$Pref == "C"), nrow(prefsABCsex[prefsABCsex$Sex == "F",]), p=1/3)
p.adjust(c(fa$p.value, fb$p.value, fc$p.value), method="holm") # correct for multiple comparisons
# read in a data file with page views from an A/B test
pgviews = read.csv("pgviews.csv")
View(pgviews)
pgviews$Subject = factor(pgviews$Subject) # convert to nominal factor
pgviews$Site = factor(pgviews$Site) # Rv4
summary(pgviews)
# descriptive statistics by Site
library(plyr)
# ddply allows us to apply a function on a dataframe
ddply(pgviews, ~ Site, function(data) summary(data$Pages))
ddply(pgviews, ~ Site, summarise, Pages.mean=mean(Pages), Pages.sd=sd(Pages))
# graph histograms and a boxplot
hist(pgviews[pgviews$Site == "A",]$Pages)
hist(pgviews[pgviews$Site == "B",]$Pages)
plot(Pages ~ Site, data=pgviews)
# independent-samples t-test
t.test(Pages ~ Site, data=pgviews, var.equal=TRUE)
# read in a data file with page views from an A/B test
pgviews = read.csv("timeonsite.csv")
View(pgviews)
View(timeonsite)
# read in a data file with page views from an A/B test
timeonsite = read.csv("timeonsite.csv")
View(timeonsite)
timeonsite$Subject = factor(timeonsite$Subject) # convert to nominal factor
timeonsite$Site = factor(timeonsite$Site) # Rv4
summary(timeonsite)
# descriptive statistics by Site
library(plyr)
# ddply allows us to apply a function on a dataframe
ddply(timeonsite, ~ Site, function(data) summary(data$Time))
ddply(timeonsite, ~ Site, summarise, Time.mean=mean(Time), Time.sd=sd(Time))
ddply(timeonsite, ~ Site, summarise, Time.median=median(Time), Time.sd=sd(Time))
# graph histograms and a boxplot
hist(timeonsite[timeonsite$Site == "A",]$Time)
hist(timeonsite[timeonsite$Site == "B",]$Time)
plot(Time ~ Site, data=pgviews)
plot(Time ~ Site, data=timeonsite)
# independent-samples t-test
t.test(Pages ~ Site, data=pgviews, var.equal=TRUE)
# independent-samples t-test
t.test(Time ~ Site, data=timeonsite, var.equal=TRUE)
# independent-samples t-test
t.test(Time ~ Site, data=timeonsite, var.equal=FALSE)
# read in a data file with task completion times (min) from 2 programming tools
ide2 = read.csv("ide2.csv")
View(ide2)
ide2$Subject = factor(ide2$Subject) # convert to nominal factor
ide2$IDE = factor(ide2$IDE) # Rv4
summary(ide2)
summary(ide2)
# view descriptive statistics by IDE
library(plyr)
ddply(ide2, ~ IDE, function(data) summary(data$Time))
ddply(ide2, ~ IDE, summarise, Time.mean=mean(Time), Time.sd=sd(Time))
# graph histograms and a boxplot
hist(ide2[ide2$IDE == "VStudio",]$Time) # histogram
hist(ide2[ide2$IDE == "Eclipse",]$Time) # histogram
plot(Time ~ IDE, data=ide2) # boxplot
# independent-samples t-test (suitable? maybe not, because...)
t.test(Time ~ IDE, data=ide2, var.equal=TRUE)
